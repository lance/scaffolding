# Build the tuf server binary
FROM brew.registry.redhat.io/rh-osbs/openshift-golang-builder:rhel_9_1.22@sha256:8b3204440aae8b40d5c661b817de48e6949fee111e5a2662bec916688c1f19e7 AS build-env
WORKDIR /tuf-server
RUN git config --global --add safe.directory /tuf-server

COPY . .
USER root
RUN go mod vendor
RUN make build-tuf-server

# Install server
FROM registry.access.redhat.com/ubi9-minimal@sha256:29790f898839e92c0554d031856e1770254f27e66af593fc088fbb7d3e5e298e
COPY --from=build-env /tuf-server/server /usr/local/bin/tuf-server
RUN chown root:0 /usr/local/bin/tuf-server && chmod g+wx /usr/local/bin/tuf-server

# Configure home directory
ENV HOME=/home
RUN chgrp -R 0 /${HOME} && chmod -R g=u /${HOME}

WORKDIR ${HOME}

LABEL description="Binary for the TUF (The Update Framework) server."
LABEL io.k8s.description="Binary for the TUF (The Update Framework) server."
LABEL io.k8s.display-name="TUF server container image for Red Hat Trusted Artifact Signer."
LABEL io.openshift.tags="TUF-server, Red Hat trusted artifact signer."
LABEL summary="Provides the TUF server binary."
LABEL com.redhat.component="tuf-server"
LABEL name="tuf-server"

# Set the binary as the entrypoint of the container
ENTRYPOINT ["tuf-server"]
